<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link
      href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet"
    />
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/css/materialize.min.css"
    />
    <link rel="stylesheet" href="/stylesheets/style.css" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/materialize/1.0.0/js/materialize.min.js"></script>
    <script src="https://code.jquery.com/jquery-1.11.2.min.js"></script>
    <script src="https://localhost:8000/socket.io/socket.io.js"></script>
  </head>

  <body>
    <div class="container">
      <h2><%= title %> . . .</h2>
      <div>
        <video
          src=""
          id="video"
          style="width:730; height: 414;"
          autoplay="true"
        ></video>
        <canvas style="display:none;" id="preview"></canvas>
      </div>
      <div id="logger"></div>
    </div>
  </body>

  <script type="text/javascript">
    const socket = io('https://localhost:8000').connect();
    socket.on('connect', () => {
      const shopId = new Date().getTime();

      window.onbeforeunload = () => {
        console.log('leaving room');
        socket.emit('leaveroom', { shopId, sender: true });
        socket.close();
      };

      const canvas = document.getElementById('preview');
      const context = canvas.getContext('2d');

      canvas.width = 730;
      canvas.height = 414;

      context.width = canvas.width;
      context.height = canvas.height;

      const video = document.getElementById('video');

      socket.emit(
        'room',
        {
          shopId,
          products: [
            '5dd38c5e06f9565e3c7c7990',
            '5dd38d6606f9565e3c7c7992',
            '5dd38e8206f9565e3c7c79be'
          ],
          title: 'Very Good Title',
          date: new Date().getTime(),
          sender: true
        },
        (err, result) => {
          console.log(err);
          console.log(result);
        }
      );

      function logger(msg) {
        $('#logger').text(msg);
      }

      function loadCamera(stream) {
        try {
          video.srcObject = stream;
        } catch (error) {
          video.src = URL.createObjectURL(stream);
        }
        logger('Camera connected');
      }

      function loadFail() {
        logger('Camera not connected');
      }

      function viewVideo(video, context) {
        context.drawImage(video, 0, 0, context.width, context.height);
        socket.emit('stream', shopId, canvas.toDataURL('image/webp', 0.3));
      }

      $(function() {
        navigator.getUserMedia =
          navigator.getUserMedia ||
          navigator.webkitGetUserMedia ||
          navigator.mozGetUserMedia ||
          navigator.msgGetUserMedia;

        if (navigator.getUserMedia) {
          navigator.getUserMedia(
            {
              video: true,
              audio: false
            },
            loadCamera,
            loadFail
          );
        }

        setInterval(function() {
          viewVideo(video, context);
        }, 5);
      });
    });
  </script>
</html>
